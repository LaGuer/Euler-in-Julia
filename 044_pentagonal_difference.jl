
"""
pentagonal_mindiff()
Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:
1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.
Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and
D = |Pk − Pj| is minimised; what is the value of D?
"""
function pentagonal_mindiff()
    #minD = Inf
    for k in Iterators.countfrom(2)
        #minD_for_k = 3k + 1 #D with j set to max value i.e. k-1
        for j in (k-1):-1:1
            S = (3*(k^2+j^2) - (k+j)) / 2
            D = (k-j) * (3*(k+j) - 1) / 2
            s = (1 + √(1 + 24*S))/6
            d = (1 + √(1 + 24*D))/6
            #@show k j s d S D
            if isinteger(s) && isinteger(d) #&& D < minD
                #first D happens to be the right answer, but should continue Exploration and 
                # actually verify it is
                return D
            end
        end
    end
end

#=

Exploration: 

k(3k-1)/2 + j(3j-1)/2 = s(3s-1)/2 => k(3k-1) + j(3j-1) = s(3s-1) -->(1)
k(3k-1)/2 - j(3j-1)/2 = d(3d-1)/2 => k(3k-1) - j(3j-1) = d(3d-1) -->(2)
====> (3k² - k - 3j² + j)/2 = D => (3(k²-j²) - (k - j))/2 = D => (k-j)[3(k+j) - 1]/2

For (1) to apply, say LHS is S, 2S = s(3s - 1) => 3s² - s - 2S = 0 => 
s = (1 + √(1+24S))/6 (only positive values allowed, so ± becomes just +)
This s should be an integer for (1) to apply.
S is also = (3k²-k+3j²-j)/2 => 24S = 12[3(k²+j²) - (k+j)]
s = (1 + √(1 + 12[3(k²+j²) - (k+j)]))/6 should be an integer. -->(3)

For (2) to apply, D = 3d² - d => 3d² - d - D = 0
d = (1 + √(1+12D))/6 should be an integer i.e.
d = (1 + √(1+6(k-j)(3k+3j-1)))/6 should be an integer -->(4)

D=(k-j)[3(k+j)-1]/2 is the value to be minimized, where k, j ∈ N, k > j, and (3) and (4) apply
ΔD (on incrementing k) = ((k+1-j)[3(k+1+j)-1] - (k-j)[3(k+j)-1])/2
2ΔD = (k-j)[3(k+1+j)-1] + [3(k+1+j)-1] - (k-j)[3(k+j)-1] = (k-j)[3(k+1+j)-1 - (3(k+j)-1)] + [3(k+1+j)-1]
= (k-j)[3(k+j) + 3 -1 -3(k+j)+1] + [3(k+1+j)-1] = (k-j)3 + 3(k+j)+3-1 = 3(k+j) + 3(k-j) + 2
= 6k + 2 => ΔD = 3k + 1
So, incrementing k increases D. 
ΔD (on incrementing j) = ((k-j-1)[3(k+j+1)-1] - (k-j)[3(k+j)-1])/2
2ΔD = (k-j)[3(k+j+1)-1] - [3(k+j+1)-1] - (k-j)[3(k+j)-1] = (k-j)[3(k+j+1)-1 - (3(k+j)-1)] - [3(k+j+1)-1]
= (k-j)[3(k+j) + 3 - 1 - 3(k+j) + 1] - 3(k+j+1) + 1 = (k-j)3 - 3(k+j) - 3 + 1 = 3(k-j) - 3(k+j) - 2
= 3(k-j-k-j) - 2 = 3(-2j) - 2 = -6j - 2 =>  ΔD = -3j - 1
So, incrementing j decreases D.

Say we find the first D satisfying the conditions at k = k₀, j = j₀ = k₀ - x
All lesser j can be skipped for same k.
Incrementing k by 1, D = D + 3k₀+1.
Incrementing j by 1, D = D - 3j₀-1 = D - 3(k₀-x)-1 = D - 3k₀ + 3x - 1
So doing both, D = D + 3x.
Incrementing j by 2, D = D - 3j₀ - 1 - 3(j₀+1) - 1 = D - 6j₀ - 5 = D - 6k₀ + 6x - 5
Combined with k increment, D = D + 3k₀ + 1 - 6k₀ + 6x - 5 = D - 3k₀ + 6x - 4
Incrementing j by c, D = D - Σ(k=0:c-1): (3(j₀+k) - 1) = D - c - 3cj₀ - 3c(c-1)/2
Combined with k increment, D = D + 3k₀ + 1 - c - 3cj₀ - 3c(c-1)/2 
Incrementing k by b...#TODO

=#

isinteractive() || println(pentagonal_mindiff())

